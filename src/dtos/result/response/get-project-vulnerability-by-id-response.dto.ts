/***************************************************************************
 * 1) UserDto
 ***************************************************************************/
export class UserDto {
  id: string;

  firstName: string;

  lastName: string;

  email: string;

  picture: string;

  constructor(id: string, firstName: string, lastName: string, email: string, picture: string) {
    this.id = id;
    this.firstName = firstName;
    this.lastName = lastName;
    this.email = email;
    this.picture = picture;
  }
}

/***************************************************************************
 * 2) CodeLineDto
 ***************************************************************************/
export class CodeLineDto {
  line: number;

  content: string;

  constructor(line: number, content: string) {
    this.line = line;
    this.content = content;
  }
}

/***************************************************************************
 * 3) Sous-DTO SCA
 ***************************************************************************/
export class ScaDetectedLibraryDto {
  id: string;

  projectId: string;

  packageName: string;

  packageVersion: string;

  fileName: string;

  ecosystem: string;

  constructor(id: string, projectId: string, packageName: string, packageVersion: string, fileName: string, ecosystem: string) {
    this.id = id;
    this.projectId = projectId;
    this.packageName = packageName;
    this.packageVersion = packageVersion;
    this.fileName = fileName;
    this.ecosystem = ecosystem;
  }
}

export class VulnerabilityScaCweDto {
  id: string;

  cweId: string;

  constructor(id: string, cweId: string) {
    this.id = id;
    this.cweId = cweId;
  }
}

export class VulnerabilityScaAliasDto {
  id: string;

  alias: string;

  constructor(id: string, alias: string) {
    this.id = id;
    this.alias = alias;
  }
}

export class VulnerabilityScaReferenceDto {
  id: string;

  type: string;

  url: string;

  constructor(id: string, type: string, url: string) {
    this.id = id;
    this.type = type;
    this.url = url;
  }
}

export class VulnerabilityScaSeverityDto {
  id: string;

  type: string;

  score: string;

  constructor(id: string, type: string, score: string) {
    this.id = id;
    this.type = type;
    this.score = score;
  }
}

export class VulnerabilityScaPackageDto {
  id: string;

  ecosystem: string;

  packageName: string;

  introduced: string;

  fixed: string;

  fixAvailable: boolean;

  constructor(id: string, ecosystem: string, packageName: string, introduced: string, fixed: string, fixAvailable: boolean) {
    this.id = id;
    this.ecosystem = ecosystem;
    this.packageName = packageName;
    this.introduced = introduced;
    this.fixed = fixed;
    this.fixAvailable = fixAvailable;
}
}

/***************************************************************************
 * 4) VulnerabilityMetadataDto : commun pour SAST/IAC
 ***************************************************************************/
export class VulnerabilityMetadataDto {
  id: string;

  cwe: string[];

  name: string;

  shortDescription: string;

  description: string;

  howToPrevent: string;

  // Optionnel, not validated by default
  cweArray?: string[];

  owaspTop10?: string[] | null;

  severity: string;

  language: string;

  vulnerabilityType: string;

  constructor(id: string, cwe: string[], name: string, shortDescription: string, description: string, howToPrevent: string, cweArray: string[], owaspTop10: string[], severity: string, language: string, vulnerabilityType: string) {
    this.id = id;
    this.cwe = cwe;
    this.name = name;
    this.shortDescription = shortDescription;
    this.description = description;
    this.howToPrevent = howToPrevent;
    this.cweArray = cweArray;
    this.owaspTop10 = owaspTop10;
    this.severity = severity;
    this.language = language;
    this.vulnerabilityType = vulnerabilityType;
  }
}

/***************************************************************************
 * 5) HistoryItemDto
 ***************************************************************************/
export class HistoryItemDto {
  id: string;

  type: string;

  value: string;

  date: string;

  userId?: string | null;

  user?: UserDto | null;

  constructor(id: string, type: string, value: string, date: string, userId: string | null, user: UserDto | null) {
    this.id = id;
    this.type = type;
    this.value = value;
    this.date = date;
    this.userId = userId;
    this.user = user;
  }
}

/***************************************************************************
 * 6) CodeSnippetDto
 ***************************************************************************/
export class CodeSnippetDto {
  id: string;

  vulnerableStartLine: number;

  vulnerableEndLine: number;

  startLine: number;

  endLine: number;

  code: CodeLineDto[];


  language: string;

  fixAnalysis?: string | null;

  fixAnalysisDescription?: string | null;

  constructor(id: string, vulnerableStartLine: number, vulnerableEndLine: number, startLine: number, endLine: number, code: CodeLineDto[], language: string, fixAnalysis: string | null, fixAnalysisDescription: string | null) {
    this.id = id;
    this.vulnerableStartLine = vulnerableStartLine;
    this.vulnerableEndLine = vulnerableEndLine;
    this.startLine = startLine;
    this.endLine = endLine;
    this.code = code;
    this.language = language;
    this.fixAnalysis = fixAnalysis;
    this.fixAnalysisDescription = fixAnalysisDescription;
  }
}

/***************************************************************************
 * 7) DataFlowItemDto
 ***************************************************************************/
export class DataFlowItemDto {
  id: string;

  nameHighlight: string;

  line: number;

  language: string;

  code: CodeLineDto[];

  type: string;

  order: number;

  constructor(id: string, nameHighlight: string, line: number, language: string, code: CodeLineDto[], type: string, order: number) {
    this.id = id;
    this.nameHighlight = nameHighlight;
    this.line = line;
    this.language = language;
    this.code = code;
    this.type = type;
    this.order = order;
}
}

/***************************************************************************
 * 8) VulnerabilityDto (classe parente)
 *    utilisée par SAST, IAC, ...
 ***************************************************************************/
export class VulnerabilityDtoResponse {
  id: string;

  projectId: string;

  createdAt: string;

  updateAt: string;

  timeToFix?: string | null;

  currentState: string;

  currentSeverity: string;

  currentPriority: string;

  contextualExplanation?: string | null;

  language: string;

  path: string;

  vulnerableStartLine: number;

  vulnerableEndLine: number;

  vulnerability: VulnerabilityMetadataDto;

  historyItems: HistoryItemDto[];


  codeSnippets: CodeSnippetDto[];

  vulnerabilityType: string;

  constructor(id: string, projectId: string, createdAt: string, updateAt: string, timeToFix: string | null, currentState: string, currentSeverity: string, currentPriority: string, contextualExplanation: string | null, language: string, path: string, vulnerableStartLine: number, vulnerableEndLine: number, vulnerability: VulnerabilityMetadataDto, historyItems: HistoryItemDto[], codeSnippets: CodeSnippetDto[], vulnerabilityType: string) {
    this.id = id;
    this.projectId = projectId;
    this.createdAt = createdAt;
    this.updateAt = updateAt;
    this.timeToFix = timeToFix;
    this.currentState = currentState;
    this.currentSeverity = currentSeverity;
    this.currentPriority = currentPriority;
    this.contextualExplanation = contextualExplanation;
    this.language = language;
    this.path = path;
    this.vulnerableStartLine = vulnerableStartLine;
    this.vulnerableEndLine = vulnerableEndLine;
    this.vulnerability = vulnerability;
    this.historyItems = historyItems;
    this.codeSnippets = codeSnippets;
    this.vulnerabilityType = vulnerabilityType;
  }
}

/***************************************************************************
 * 9) SAST / IAC
 ***************************************************************************/
export class VulnerabilitySastDto extends VulnerabilityDtoResponse {

  dataFlowItems: DataFlowItemDto[];

  vulnerabilityType = 'sast';

  constructor(id: string, projectId: string, createdAt: string, updateAt: string, timeToFix: string | null, currentState: string, currentSeverity: string, currentPriority: string, contextualExplanation: string | null, language: string, path: string, vulnerableStartLine: number, vulnerableEndLine: number, vulnerability: VulnerabilityMetadataDto, historyItems: HistoryItemDto[], codeSnippets: CodeSnippetDto[], vulnerabilityType: string, dataFlowItems: DataFlowItemDto[]) {
    super(id, projectId, createdAt, updateAt, timeToFix, currentState, currentSeverity, currentPriority, contextualExplanation, language, path, vulnerableStartLine, vulnerableEndLine, vulnerability, historyItems, codeSnippets, vulnerabilityType);
    this.dataFlowItems = dataFlowItems;
  }
}

export class VulnerabilityIacDto extends VulnerabilityDtoResponse {
  vulnerabilityType = 'iac';
}

/***************************************************************************
 * 10) SCA :
 *    On veut un "metadata" plus riche => On crée une classe enfant
 *    qui hérite de "VulnerabilityMetadataDto" mais ajoute cve, ghsaId, etc.
 ***************************************************************************/
export class VulnerabilityScaMetadataDto extends VulnerabilityMetadataDto {
  cve: string;

  internalId: string;

  summary: string;

  severityGh: string;

  schemaVersion: string;

  modifiedAt?: string;

  publishedAt?: string;

  githubReviewedAt?: string;

  nvdPublishedAt?: string;

  aliases: VulnerabilityScaAliasDto[];

  cwes: VulnerabilityScaCweDto[];

  references: VulnerabilityScaReferenceDto[];

  severities: VulnerabilityScaSeverityDto[];

  packages: VulnerabilityScaPackageDto[];

  vulnerabilityType = 'sca';

  constructor(
    id: string, 
    cwe: string[], 
    name: string, 
    shortDescription: string, 
    description: string, 
    howToPrevent: string, 
    cweArray: string[], 
    owaspTop10: string[], 
    severity: string, 
    language: string, 
    vulnerabilityType: string,
    cve: string,
    internalId: string,
    summary: string,
    severityGh: string,
    schemaVersion: string,
    modifiedAt?: string,
    publishedAt?: string,
    githubReviewedAt?: string,
    nvdPublishedAt?: string,
    aliases: VulnerabilityScaAliasDto[] = [],
    cwes: VulnerabilityScaCweDto[] = [],
    references: VulnerabilityScaReferenceDto[] = [],
    severities: VulnerabilityScaSeverityDto[] = [],
    packages: VulnerabilityScaPackageDto[] = []
  ) {
    super(id, cwe, name, shortDescription, description, howToPrevent, cweArray, owaspTop10, severity, language, vulnerabilityType);
    this.cve = cve;
    this.internalId = internalId;
    this.summary = summary;
    this.severityGh = severityGh;
    this.schemaVersion = schemaVersion;
    this.modifiedAt = modifiedAt;
    this.publishedAt = publishedAt;
    this.githubReviewedAt = githubReviewedAt;
    this.nvdPublishedAt = nvdPublishedAt;
    this.aliases = aliases;
    this.cwes = cwes;
    this.references = references;
    this.severities = severities;
    this.packages = packages;
  }
}

/***************************************************************************
 * 11) La classe "VulnerabilityScaDto" hérite de "VulnerabilityDto"
 ***************************************************************************/
export class VulnerabilityScaDto extends VulnerabilityDtoResponse {
  ['package']?: ScaDetectedLibraryDto;

  cvssScore?: number;

  declare vulnerability: VulnerabilityScaMetadataDto;

  vulnerabilityType = 'sca';

  constructor(
    id: string, 
    projectId: string, 
    createdAt: string, 
    updateAt: string, 
    timeToFix: string | null, 
    currentState: string, 
    currentSeverity: string, 
    currentPriority: string, 
    contextualExplanation: string | null, 
    language: string, 
    path: string, 
    vulnerableStartLine: number, 
    vulnerableEndLine: number, 
    vulnerability: VulnerabilityScaMetadataDto, 
    historyItems: HistoryItemDto[], 
    codeSnippets: CodeSnippetDto[],
    packageData?: ScaDetectedLibraryDto,
    cvssScore?: number
  ) {
    super(id, projectId, createdAt, updateAt, timeToFix, currentState, currentSeverity, currentPriority, contextualExplanation, language, path, vulnerableStartLine, vulnerableEndLine, vulnerability, historyItems, codeSnippets, 'sca');
    this['package'] = packageData;
    this.cvssScore = cvssScore;
    this.vulnerability = vulnerability;
  }
}

/***************************************************************************
 * 12) Réponse finale, discriminateur par "vulnerabilityType"
 ***************************************************************************/
export class GetProjectVulnerabilityByIdResponseDto {

  projectId: string;

  vulnerabilityId: string;

  vulnerability: VulnerabilitySastDto | VulnerabilityIacDto | VulnerabilityScaDto;

  constructor(
    projectId: string,
    vulnerabilityId: string,
    vulnerability: VulnerabilitySastDto | VulnerabilityIacDto | VulnerabilityScaDto,
  ) {
    this.projectId = projectId;
    this.vulnerabilityId = vulnerabilityId;
    this.vulnerability = vulnerability;
  }

  public toString(): string {
    return JSON.stringify(this);
  }
}
